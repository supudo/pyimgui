environment:
  global:
    DROPBOX_TOKEN:
      secure: UO64ZwJpnDQe5c7xArS14TLnqUi7TR76tJLpZVxo5lV8GJXEkDBEOjFsmaEVFQ/rvqCmMkECYE3RNWhFO/DE0o3Vh/6FCOiO2ZAQsKkOIGk=

  matrix:
    - PYTHON: "C:\\Python27"
      PYTHON_ARCH: 32
      MSVC_VERSION: "Visual Studio 10"

    - PYTHON: "C:\\Python33"
      PYTHON_ARCH: 32
      MSVC_VERSION: "Visual Studio 10"

    - PYTHON: "C:\\Python34"
      PYTHON_ARCH: 32
      MSVC_VERSION: "Visual Studio 10"

    - PYTHON: "C:\\Python35"
      PYTHON_ARCH: 32
      MSVC_VERSION: "Visual Studio 14"

    # x64 builds
    - PYTHON: "C:\\Python27-x64"
      PYTHON_ARCH: 64
      MSVC_VERSION: "Visual Studio 10 Win64"

    - PYTHON: "C:\\Python33-x64"
      PYTHON_ARCH: 64
      MSVC_VERSION: "Visual Studio 10 Win64"
      DISTUTILS_USE_SDK: "1"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_ARCH: 64
      MSVC_VERSION: "Visual Studio 10 Win64"
      DISTUTILS_USE_SDK: "1"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_ARCH: 64
      MSVC_VERSION: "Visual Studio 14 Win64"

init:
  - "ECHO %PYTHON% %PYTHON_ARCH% %MSVC_VERSION%"
  - "%PYTHON%\\python.exe --version"

install:
  # python requirements needed to create distribution
  - "%PYTHON%\\python.exe -m pip install wheel"

  # try to fix cython install, see:
  # * https://matthew-brett.github.io/pydagogue/python_msvc.html
  # * https://blog.ionelmc.ro/2014/12/21/compiling-python-extensions-on-windows/
  - echo "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 > "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\amd64/vcvars64.bat"

  # note: VS 2010 has stdint.h bundled so simply copy it. Cython should not
  #       depend on it for py27 (works fine when compiling using C code)
  #       but this works differently for C++ (maybe there is some other issue
  #       with environment setup).
  # try to do a dirty workaround for Cython with C++ for py27
  - cp "c:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdint.h" "C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\include\stdint.h"
  # get latest version of all submodules
  - "git submodule update --init --recursive"
  - "%PYTHON%\\python.exe -m pip install -r doc/requirements-test.txt"

build: off

build_script:
  - "ci\\appveyor_build.cmd %PYTHON%/python.exe -m pip wheel . -w dist"
  - "%PYTHON%/python.exe -m pip install -e ."
  - "%PYTHON%/python.exe -m pytest -v --color=yes"

on_success:
  - if [%APPVEYOR_REPO_BRANCH%]==[master] (
       python.exe -m pip install dropbox &&
       python.exe ci/dropbox_upload.py)

artifacts:
  - path: dist\*
